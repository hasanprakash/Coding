#include <fstream>
#include <vector>
using namespace std;
ifstream cin;
ofstream cout;
int R, C;
int x, y;
string arr[101];

void printMatrix();

void floodFillHelper(int x, int y) {
    arr[x][y] = '*';
    if(x-1 >= 0 && arr[x-1][y] == '.')
        floodFillHelper(x-1, y);
    if(x+1 < R && arr[x+1][y] == '.')
        floodFillHelper(x+1, y);
    if(y-1 >= 0 && arr[x][y-1] == '.')
        floodFillHelper(x, y-1);
    if(y+1 < C && arr[x][y+1] == '.')
        floodFillHelper(x, y+1);
    if(x-1 >= 0 && y-1 >= 0 && arr[x-1][y-1] == '.')
        floodFillHelper(x-1, y-1);
    if(x-1 >= 0 && y+1 < C && arr[x-1][y+1] == '.')
        floodFillHelper(x-1, y+1);
    if(x+1 < R && y-1 >= 0 && arr[x+1][y-1] == '.')
        floodFillHelper(x+1, y-1);
    if(x+1 < R && y+1 < C && arr[x+1][y+1] == '.')
        floodFillHelper(x+1, y+1);
}

void floodFill(vector<pair<int, int>> v) {
    for(auto i:v) {
        x = i.first;
        y = i.second;
        floodFillHelper(x, y);
    }
}

int main() {
    cin.open("../input.txt");
    cout.open("../output.txt");
    cin >> R >> C;
    int n;
    cin >> n;
    vector<pair<int, int>> v;
    for(int i=0;i<n;i++) {
        cin >> x >> y;
        v.push_back(make_pair(x, y));
    }
    for(int i=0;i<R;i++) {
        cin >> arr[i];
    }
    floodFill(v);
    printMatrix();
}



void printMatrix() {
    for(int i=0;i<R;i++) {
        cout << arr[i] << endl;
    }
}




/*
INPUT:
14 39
2
2 4
2 24
---------------------------------------
--.............--------..............--
--..............-------.............---
--...-------.....--------------....----
--...-------....-------------....------
--...-------...-------------....-------
--...........--------------....--------
--...........-------------....---------
--...-------...----------....----------
--...-------....--------....-----------
--...------.....-------....------------
--............---------..............--
--...........----------..............--
---------------------------------------

OUTPUT:
---------------------------------------
--*************--------**************--
--**************-------*************---
--***-------*****--------------****----
--***-------****-------------****------
--***-------***-------------****-------
--***********--------------****--------
--***********-------------****---------
--***-------***----------****----------
--***-------****--------****-----------
--***------*****-------****------------
--************---------**************--
--***********----------**************--
---------------------------------------

*/